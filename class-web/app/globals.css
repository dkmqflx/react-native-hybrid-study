@tailwind base;
@tailwind components;
@tailwind utilities;

/* 
아래는 모바일 화면에서 배율에 따라 너비가 커지는 것을 계산하기 위하여 사용하는 코드
360px 기준으로 16px인 경우 
100vw 일 때의 폰트 사이즈를 구하기 위한 식

100vw로 두는 이유는 360px 기준으로 모바일 화면이 작을 수도 클수도 있기 때문에 정확히 알 수 없기 때문 

100vw: 360px = 16px: xpx
x = 360 * 16 / 100
x = 40 / 9 * 1vw
 */
html {
  font-size: calc(40 / 9 * 1vw);
}

/* 
section09/09-01-view-transition => 페이지 전환 애니메이션 정의
- document.startViewTransition(...) 호출 시 브라우저가 이전/다음 화면을 스냅샷하여
  html::view-transition-old(root) / html::view-transition-new(root) 가상 요소로 노출합니다.
- 아래 keyframes와 선택자는 그 가상 요소에 적용될 애니메이션을 지정합니다.
- 지원되지 않는 브라우저에서는 이 규칙이 무시되고 기본 전환이 수행됩니다.
*/
/* 현재 페이지를 왼쪽으로 밀어내는 슬라이드 아웃 */
@keyframes 이동하기_이전페이지 {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(-100%);
  }
}

/* 다음 페이지를 오른쪽에서 들어오게 하면서 페이드 인 */
@keyframes 이동하기_다음페이지 {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  to {
    transform: translateX(0%);
    opacity: 1;
  }
}

/* 이전 화면 스냅샷(OLD)에 애니메이션 적용 */
html::view-transition-old(root) {
  animation-name: 이동하기_이전페이지;
  animation-duration: 0.5s; /* 필요 시 easing, delay 등을 추가할 수 있습니다 */
}

/* 다음 화면 스냅샷(NEW)에 애니메이션 적용 */
html::view-transition-new(root) {
  animation-name: 이동하기_다음페이지;
  animation-duration: 0.5s; /* 필요 시 animation-timing-function 등 조절 가능 */
}

/* section09/09-02-view-transition-back => 페이지이동 뒤로가기 애니메이션 추가 */
@keyframes 뒤로가기_이전페이지 {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes 뒤로가기_다음페이지 {
  from {
    opacity: 0;
  }
  30% {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

html.뒤로가기::view-transition-old(root) {
  animation-name: 뒤로가기_이전페이지;
  animation-duration: 0.5s;
}
html.뒤로가기::view-transition-new(root) {
  animation-name: 뒤로가기_다음페이지;
  animation-duration: 0.5s;
}
